worker_processes auto;
pid /var/run/nginx/nginx.pid;
error_log /var/log/nginx/error.log warn;
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=30r/s;
    server {
        listen 9080;
        server_name localhost;
        root /usr/share/nginx/html/browser;
        index index.html;
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header X-Robots-Tag "noindex, nofollow" always;
        # Error pages
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;

        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
        # Angular routes con mejor manejo de archivos
        location / {
            try_files $uri $uri/ @angular;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;

            # Rate limiting para páginas
            limit_req zone=static burst=20 nodelay;
        }

        # Fallback para rutas de Angular
        location @angular {
            try_files /index.html =404;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        }
        # Proxy configuration for /fmovil backend
        location ~ ^/fmovil(/|$) {
            # Rate limiting para API
            limit_req zone=api burst=5 nodelay;

            # Verificar que BACKEND_PROXY_URL esté configurado
            set $backend_url "${BACKEND_PROXY_URL}";
            if ($backend_url = "") {
                return 503 "Backend proxy URL not configured";
            }

            proxy_pass ${BACKEND_PROXY_URL}/fmovil/;
            proxy_http_version 1.1;

            # Headers para el proxy
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_set_header X-Forwarded-Port $server_port;
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;

            # Buffer configuration para usar memoria en lugar de archivos
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            proxy_max_temp_file_size 0;  # Desactivar archivos temporales
            # CORS handling mejorado
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '$http_origin' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With, Accept, Origin, Cache-Control, X-File-Name' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Length' 0 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                return 204;
            }
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With, Accept, Origin, Cache-Control, X-File-Name' always;

            # Error handling
            proxy_intercept_errors on;
            error_page 502 503 504 = @backend_error;
        }

        # Backend error handling
        location @backend_error {
            add_header Content-Type application/json always;
            return 503 '{"error": "Backend service temporarily unavailable", "timestamp": "$time_iso8601"}';
        }
        # Static assets cache con versioning
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable" always;
            add_header Vary "Accept-Encoding" always;

            # Rate limiting para assets
            limit_req zone=static burst=50 nodelay;

            # Fallback si el archivo no existe
            try_files $uri =404;
        }
        # Health check endpoint con más información
        location /health {
            access_log off;
            add_header Content-Type application/json always;
            return 200 '{"status": "healthy", "timestamp": "$time_iso8601", "version": "$APP_VERSION"}';
        }

        # Nginx status para monitoreo interno
        location /nginx-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
        # Deshabilitar logs para favicon
        location = /favicon.ico {
            log_not_found off;
            access_log off;
            expires 1y;
            add_header Cache-Control "public, immutable" always;
        }

        # Protección contra acceso a archivos sensibles
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}
